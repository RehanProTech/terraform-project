# 1. creating s3 bucket resouce and variable file for name of the project

resource "aws_s3_bucket" "inayazainbucket" {
  bucket = var.bucketname
  }

# 2. Creating ownership control

resource "aws_s3_bucket_ownership_controls" "example" {
  bucket = aws_s3_bucket.inayazainbucket.id

  rule {
    object_ownership = "BucketOwnerPreferred"
  }
}

# 3. modifying ACL to allow public access 

resource "aws_s3_bucket_public_access_block" "example" {
  bucket = aws_s3_bucket.inayazainbucket.id

  block_public_acls       = false
  block_public_policy     = false
  ignore_public_acls      = false
  restrict_public_buckets = false
}

resource "aws_s3_bucket_acl" "example" {
  depends_on = [
    aws_s3_bucket_ownership_controls.example,
    aws_s3_bucket_public_access_block.example,
  ]

  bucket = aws_s3_bucket.inayazainbucket.id
  acl    = "public-read"
}

# 4. identifying index.html and error.html file

resource "aws_s3_object" "index" {
  bucket = aws_s3_bucket.inayazainbucket.id
  key    = "index.html"
  source = "index.html"
  acl    = "public-read"
  content_type = "text/html"
}

resource "aws_s3_object" "error" {
  bucket = aws_s3_bucket.inayazainbucket.id
  key    = "error.html"
  source = "error.html"
  acl    = "public-read"
  content_type = "text/html"
}
# 5. Identifying and adding profile pic to the code
resource "aws_s3_object" "profile" {
  bucket = aws_s3_bucket.inayazainbucket.id
  key    = "profile.png"
  source = "profile.png"
  acl    = "public-read"
}

# 6. Providing configuration resource for website.

resource "aws_s3_bucket_website_configuration" "website" {
  bucket = aws_s3_bucket.inayazainbucket.id 

  index_document {

    suffix = "index.html"

  }

error_document {
  key = "error.html"
}

depends_on = [aws_s3_bucket_acl.example]

}
